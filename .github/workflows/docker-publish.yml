name: Build

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron:  '30,0 * * * *'
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches:
      - 'master'

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [ linux/arm64 , linux/amd64 ]
        include:
          - arch: linux/arm64
            builder: buildjet-4vcpu-ubuntu-2204-arm
          - arch: linux/amd64
            builder: buildjet-4vcpu-ubuntu-2204
    name: Build - ${{matrix.arch}}
    runs-on: ${{matrix.builder}}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

        # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.arch }}
          context: .
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:master
          cache-to: type=inline
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build-and-push.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: sanitise arch name for artifact
        run: |
          clean=${{ matrix.arch }}
          clean=${clean////-}
          echo "ARTIFACT_NAME=digests-${clean}" >> $GITHUB_ENV
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.ARTIFACT_NAME }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          merge-multiple: true
          path: /tmp/digests
      - name: Set up QEMU (arm64)
        if: runner.arch != 'arm64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up QEMU (x64)
        if: runner.arch != 'x64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
